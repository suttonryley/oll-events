{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sutto\\\\Documents\\\\react_practice\\\\oll-events\\\\src\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const [artistError, setArtistError] = useState(null);\n  const [isArtistLoaded, setIsArtistLoaded] = useState(false);\n  const [artistItems, setArtistItems] = useState([]);\n  const [eventError, setEventError] = useState(null);\n  const [isEventLoaded, setIsEventLoaded] = useState(false);\n  const [eventItems, setEventItems] = useState([]);\n  const [venueError, setVenueError] = useState(null);\n  const [isVenueLoaded, setIsVenueLoaded] = useState(false);\n  const [venueItems, setVenueItems] = useState([]);\n  const [showVenue, setShowVenue] = useState(false);\n  const [venueName, setVenueName] = useState(null);\n  const [venueIcon, setVenueIcon] = useState(null);\n  const [venueAddress, setVenueAddress] = useState(null); // This fetches the JSON data and builds the \n\n  useEffect(() => {\n    fetch(\"https://oll-coding-exercise.s3-us-west-2.amazonaws.com/artists.json\").then(res => res.json()).then(result => {\n      setIsArtistLoaded(true);\n      setArtistItems(result);\n    }, error => {\n      setIsArtistLoaded(true);\n      setArtistError(error);\n    });\n    fetch(\"https://oll-coding-exercise.s3-us-west-2.amazonaws.com/events.json\").then(res => res.json()).then(result => {\n      setIsEventLoaded(true);\n      setEventItems(result);\n    }, error => {\n      setIsEventLoaded(true);\n      setEventError(error);\n    });\n    fetch(\"https://oll-coding-exercise.s3-us-west-2.amazonaws.com/venues.json\").then(res => res.json()).then(result => {\n      setIsVenueLoaded(true);\n      setVenueItems(result);\n    }, error => {\n      setIsVenueLoaded(true);\n      setVenueError(error);\n    });\n  }, []);\n\n  function expandVenue() {\n    setShowVenue(true);\n  }\n\n  function buildRow(item, index) {\n    let rowID = \"event_\" + item.id;\n    let artistName = null;\n    let artistGenre = null; //get artist and genre\n\n    artistItems.forEach(element => {\n      if (element.id == item.artist_id) {\n        artistName = element.name;\n        artistGenre = element.genre;\n      }\n    });\n    let venueName = null;\n    let venueIcon = null;\n    let venueAddress = null; //get venue \n\n    venueItems.forEach(element => {\n      if (element.id == item.venue_id) {\n        venueName = element.name;\n        venueIcon = element.icon;\n        venueAddress = element.address;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      id: \"rowID\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: item.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: artistGenre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: expandVenue,\n          children: venueName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: showVenue ? 'hidden' : null,\n          children: [venueName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: venueIcon,\n            alt: \"No picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 66\n          }, this), venueAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [\"$\", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (artistError || eventError || venueError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", artistError.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }, this);\n  } else if (!isArtistLoaded || !isEventLoaded || !isVenueLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Table-Header\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Event Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Event Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Venue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ticket Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), eventItems.map((item, index) => buildRow(item, index)), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Table, \"6lLbLuh5i6MYdqYoMKPlUGGhzcE=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/Sutto/Documents/react_practice/oll-events/src/Table.js"],"names":["React","useState","useEffect","Table","artistError","setArtistError","isArtistLoaded","setIsArtistLoaded","artistItems","setArtistItems","eventError","setEventError","isEventLoaded","setIsEventLoaded","eventItems","setEventItems","venueError","setVenueError","isVenueLoaded","setIsVenueLoaded","venueItems","setVenueItems","showVenue","setShowVenue","venueName","setVenueName","venueIcon","setVenueIcon","venueAddress","setVenueAddress","fetch","then","res","json","result","error","expandVenue","buildRow","item","index","rowID","id","artistName","artistGenre","forEach","element","artist_id","name","genre","venue_id","icon","address","date","title","price","message","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Table.css';\r\n\r\nfunction Table() {\r\n    const [artistError, setArtistError] = useState(null);\r\n    const [isArtistLoaded, setIsArtistLoaded] = useState(false);\r\n    const [artistItems, setArtistItems] = useState([]);\r\n    const [eventError, setEventError] = useState(null);\r\n    const [isEventLoaded, setIsEventLoaded] = useState(false);\r\n    const [eventItems, setEventItems] = useState([]);\r\n    const [venueError, setVenueError] = useState(null);\r\n    const [isVenueLoaded, setIsVenueLoaded] = useState(false);\r\n    const [venueItems, setVenueItems] = useState([]);\r\n    const [showVenue, setShowVenue] = useState(false); \r\n    const [venueName, setVenueName] = useState(null); \r\n    const [venueIcon, setVenueIcon] = useState(null); \r\n    const [venueAddress, setVenueAddress] = useState(null); \r\n\r\n    // This fetches the JSON data and builds the \r\n    useEffect(() => {\r\n        fetch(\"https://oll-coding-exercise.s3-us-west-2.amazonaws.com/artists.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsArtistLoaded(true);\r\n                    setArtistItems(result);\r\n                },\r\n                (error) => {\r\n                    setIsArtistLoaded(true);\r\n                    setArtistError(error);\r\n                }\r\n        )\r\n\r\n        fetch(\"https://oll-coding-exercise.s3-us-west-2.amazonaws.com/events.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsEventLoaded(true);\r\n                    setEventItems(result);\r\n                },\r\n                (error) => {\r\n                    setIsEventLoaded(true);\r\n                    setEventError(error);\r\n                }\r\n        )\r\n\r\n        fetch(\"https://oll-coding-exercise.s3-us-west-2.amazonaws.com/venues.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsVenueLoaded(true);\r\n                    setVenueItems(result);\r\n                },\r\n                (error) => {\r\n                    setIsVenueLoaded(true);\r\n                    setVenueError(error);\r\n                }\r\n        )\r\n        \r\n\r\n    }, [])\r\n    function expandVenue() {\r\n        setShowVenue(true); \r\n    }\r\n    function buildRow(item, index) {\r\n\r\n        let rowID = \"event_\" + item.id; \r\n\r\n        let artistName = null; \r\n        let artistGenre = null; \r\n\r\n        //get artist and genre\r\n        artistItems.forEach(element => {\r\n            if (element.id == item.artist_id) {\r\n                artistName = element.name; \r\n                artistGenre = element.genre; \r\n            }\r\n        });\r\n\r\n        let venueName = null; \r\n        let venueIcon = null; \r\n        let venueAddress = null;\r\n\r\n        //get venue \r\n        venueItems.forEach(element => {\r\n            if (element.id == item.venue_id) {\r\n                venueName = element.name; \r\n                venueIcon = element.icon; \r\n                venueAddress = element.address; \r\n            }\r\n        });\r\n        return (\r\n            <tr key={index} id=\"rowID\">\r\n                <th>{item.date}</th>\r\n                <th>{item.title}</th>\r\n                <th>{artistName}</th>\r\n                <th>{artistGenre}</th>\r\n                <th><button onClick={expandVenue}>{venueName}</button>\r\n                    <div className={showVenue ? 'hidden' : null }>\r\n                        {venueName} <br />\r\n                        <img src={venueIcon} alt=\"No picture\" /> <br />\r\n                        {venueAddress}\r\n                    </div>\r\n                </th>\r\n                <th>${item.price}</th>\r\n            </tr>\r\n        )\r\n    } \r\n\r\n    if (artistError || eventError || venueError) {\r\n        return <div>Error: {artistError.message}</div>;\r\n    } else if (!isArtistLoaded || !isEventLoaded || !isVenueLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <div className=\"Table-Header\">\r\n                <table >\r\n                    <tr>\r\n                        <th>Event Date</th>\r\n                        <th>Event Name</th>\r\n                        <th>Artist Name</th>\r\n                        <th>Artist Genre</th>\r\n                        <th>Venue</th>\r\n                        <th>Ticket Price</th>\r\n                    </tr>\r\n                    {eventItems.map((item, index) => buildRow(item,index))};\r\n                </table>\r\n                \r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table; "]},"metadata":{},"sourceType":"module"}