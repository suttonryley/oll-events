{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sutto\\\\Documents\\\\react_practice\\\\oll-events\\\\src\\\\Table.js\";\nimport React from 'react';\nimport './Table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: [{\n        eventDate: null\n      }, {\n        eventName: null\n      }, {\n        artistName: null\n      }, {\n        artistGenre: null\n      }, {\n        ventue: null\n      }, {\n        ticketPrice: null\n      }],\n      eventProfiles: [],\n      eventError: null,\n      isLoadedEvents: false,\n      eventItems: [],\n      venueError: null,\n      isLoadedVenue: false,\n      venueItems: [],\n      artistError: null,\n      isLoadedArtist: false,\n      artistItems: [],\n      size: 3\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://oll-coding-exercise.s3-us-west-2.amazonaws.com/artists.json\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoadedArtist: true,\n        artistItems: result.items\n      });\n    }, error => {\n      this.setState({\n        isLoadedArtist: true,\n        artistError\n      });\n    });\n  }\n\n  render() {\n    const {\n      artistError,\n      isLoadedArtist,\n      artistItems\n    } = this.state;\n\n    if (artistError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", artistEror.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoadedArtist) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: artistItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \", item.price]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/Sutto/Documents/react_practice/oll-events/src/Table.js"],"names":["React","Table","Component","constructor","props","state","profile","eventDate","eventName","artistName","artistGenre","ventue","ticketPrice","eventProfiles","eventError","isLoadedEvents","eventItems","venueError","isLoadedVenue","venueItems","artistError","isLoadedArtist","artistItems","size","componentDidMount","fetch","then","res","json","result","setState","items","error","render","artistEror","message","map","item","name","price","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,SAAS,EAAE;AAAb,OADK,EAEL;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFK,EAGL;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAHK,EAIL;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAJK,EAKL;AAAEC,QAAAA,MAAM,EAAE;AAAV,OALK,EAML;AAAEC,QAAAA,WAAW,EAAE;AAAf,OANK,CADA;AASTC,MAAAA,aAAa,EAAG,EATP;AAUTC,MAAAA,UAAU,EAAE,IAVH;AAWTC,MAAAA,cAAc,EAAE,KAXP;AAYTC,MAAAA,UAAU,EAAE,EAZH;AAaTC,MAAAA,UAAU,EAAE,IAbH;AAcTC,MAAAA,aAAa,EAAE,KAdN;AAeTC,MAAAA,UAAU,EAAE,EAfH;AAgBTC,MAAAA,WAAW,EAAE,IAhBJ;AAiBTC,MAAAA,cAAc,EAAE,KAjBP;AAkBTC,MAAAA,WAAW,EAAE,EAlBJ;AAmBTC,MAAAA,IAAI,EAAE;AAnBG,KAAb;AAqBH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,qEAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVT,QAAAA,cAAc,EAAE,IADN;AAEVC,QAAAA,WAAW,EAAEO,MAAM,CAACE;AAFV,OAAd;AAIH,KART,EASSC,KAAD,IAAW;AACP,WAAKF,QAAL,CAAc;AACVT,QAAAA,cAAc,EAAE,IADN;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAdT;AAgBH;;AAEDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA,WAAF;AAAeC,MAAAA,cAAf;AAA+BC,MAAAA;AAA/B,QAA+C,KAAKjB,KAA1D;;AACA,QAAIe,WAAJ,EAAiB;AACb,0BAAO;AAAA,8BAAac,UAAU,CAACC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAI,CAACd,cAAL,EAAqB;AACxB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BACI;AAAA,kBACKC,WAAW,CAACc,GAAZ,CAAgBC,IAAI,iBACjB;AAAA,qBACKA,IAAI,CAACC,IADV,OACiBD,IAAI,CAACE,KADtB;AAAA,WAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AASH;AACJ;;AA9D+B;;AAkEpC,eAAevC,KAAf","sourcesContent":["import React from 'react';\r\nimport './Table.css';\r\n\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            profile: [\r\n                { eventDate: null }, \r\n                { eventName: null },\r\n                { artistName: null }, \r\n                { artistGenre: null }, \r\n                { ventue: null }, \r\n                { ticketPrice: null},\r\n            ],\r\n            eventProfiles : [],\r\n            eventError: null,\r\n            isLoadedEvents: false,\r\n            eventItems: [],\r\n            venueError: null,\r\n            isLoadedVenue: false,\r\n            venueItems: [],\r\n            artistError: null,\r\n            isLoadedArtist: false,\r\n            artistItems: [],\r\n            size: 3,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://oll-coding-exercise.s3-us-west-2.amazonaws.com/artists.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoadedArtist: true,\r\n                        artistItems: result.items\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoadedArtist: true,\r\n                        artistError\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        const { artistError, isLoadedArtist, artistItems } = this.state;\r\n        if (artistError) {\r\n            return <div>Error: {artistEror.message}</div>;\r\n        } else if (!isLoadedArtist) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return (\r\n                <ul>\r\n                    {artistItems.map(item => (\r\n                        <li key={item.id}>\r\n                            {item.name} {item.price}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            );\r\n        }\r\n    }       \r\n}\r\n\r\n\r\nexport default Table; "]},"metadata":{},"sourceType":"module"}