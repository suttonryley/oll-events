{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sutto\\\\Documents\\\\react_practice\\\\oll-events\\\\src\\\\Rows.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Rows extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  sortByArtist() {\n    let artistNames = [];\n    let rows = []; //put all artists names together\n\n    this.props.artistItems.forEach((element, index) => {\n      artistNames.push(element.name);\n    }); //sort the names by alphabetical order\n\n    console.log(artistNames);\n    artistNames.sort();\n    console.log(artistNames);\n    artistNames.forEach(element => {\n      let cells = []; //find the artist in items\n\n      let artist = this.props.artistItems.find(({\n        name\n      }) => name === element);\n      let event = this.props.eventItems.find(({\n        artist_id\n      }) => artist_id === artist.id);\n      let venue = this.props.venueItems.find(({\n        id\n      }) => id === event.venue_id); //Build the Table \n\n      cells.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [\" \", event.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 24\n      }, this));\n      cells.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, this));\n      cells.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this));\n      cells.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: artist.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this));\n      cells.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: venue.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }, this));\n      cells.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [\"$\", event.prince]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this));\n      let rowID = 'event_' + event.id;\n      rows.push( /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: rowID,\n        children: cells\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this);\n  }\n\n  sortByVenue() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Sort By Venue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this);\n  }\n\n  render() {\n    if (this.props.optionSelected === 'Artist') {\n      // Sort by Artist \n      return this.sortByArtist();\n    } else if (this.props.optionSelected === 'Venue') {\n      return this.sortByVenue();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.optionSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Rows;","map":{"version":3,"sources":["C:/Users/Sutto/Documents/react_practice/oll-events/src/Rows.js"],"names":["React","Rows","Component","constructor","props","sortByArtist","artistNames","rows","artistItems","forEach","element","index","push","name","console","log","sort","cells","artist","find","event","eventItems","artist_id","id","venue","venueItems","venue_id","date","title","genre","prince","rowID","sortByVenue","render","optionSelected"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass Rows extends React.Component {\r\n    constructor(props) {\r\n        super(props); \r\n    }\r\n\r\n    sortByArtist() {\r\n        let artistNames = []; \r\n        let rows = []; \r\n\r\n        //put all artists names together\r\n        this.props.artistItems.forEach((element,index) => {\r\n            artistNames.push(element.name);\r\n        }); \r\n\r\n        //sort the names by alphabetical order\r\n        console.log(artistNames); \r\n        artistNames.sort(); \r\n        console.log(artistNames); \r\n\r\n        artistNames.forEach(element => {\r\n\r\n            let cells = []; \r\n\r\n            //find the artist in items\r\n            let artist = this.props.artistItems.find(({ name }) => name === element);\r\n            let event = this.props.eventItems.find(({ artist_id }) => artist_id === artist.id ); \r\n            let venue = this.props.venueItems.find(({id}) => id === event.venue_id)\r\n\r\n            //Build the Table \r\n            cells.push(<th> { event.date }</th>); \r\n            cells.push(<th>{event.title}</th>);\r\n            cells.push(<th>{artist.name}</th>);\r\n            cells.push(<th>{artist.genre}</th>);\r\n            cells.push(<th>{venue.name}</th>);\r\n            cells.push(<th>${event.prince}</th>);\r\n\r\n            let rowID = 'event_' + event.id; \r\n            rows.push(<tbody id={rowID}>{cells}</tbody>)\r\n        }); \r\n        return (<tr>{rows}</tr>);\r\n    }\r\n\r\n    sortByVenue() {\r\n        return (<div>Sort By Venue</div>); \r\n    }\r\n\r\n    render() {\r\n        if (this.props.optionSelected === 'Artist') {\r\n            // Sort by Artist \r\n            return this.sortByArtist(); \r\n        }\r\n        else if (this.props.optionSelected === 'Venue') {\r\n            return this.sortByVenue(); \r\n        }\r\n        return (\r\n            <div>\r\n                {this.props.optionSelected}\r\n            </div>\r\n        );\r\n    }\r\n     \r\n}\r\n\r\nexport default Rows; "]},"metadata":{},"sourceType":"module"}